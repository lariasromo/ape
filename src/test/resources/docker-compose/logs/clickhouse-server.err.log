2022.12.21 16:26:37.420841 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2022.12.21 16:26:37.663334 [ 1 ] {} <Warning> Access(local directory): File /var/lib/clickhouse/access/users.list doesn't exist
2022.12.21 16:26:37.663642 [ 1 ] {} <Warning> Access(local directory): Recovering lists in directory /var/lib/clickhouse/access/
2022.12.21 16:26:37.759540 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:26:37.761103 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:26:37.761676 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:26:37.762245 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:26:37.849250 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:26:37.861137 [ 1 ] {} <Error> virtual DB::WriteIndirectBufferFromRemoteFS::~WriteIndirectBufferFromRemoteFS(): Code: 499. DB::Exception: Message: The specified bucket does not exist, Key: data/sma/ahxewzcjhddmgryxjirqrxohwmtju, Bucket: ltx-eu-west-1-datalake-bronze, Object size: 4, WithPool: true. (S3_ERROR), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked const&, int, bool) @ 0xe74c47a in /usr/bin/clickhouse
1. ? @ 0x1338458a in /usr/bin/clickhouse
2. DB::WriteBufferFromS3::processPutRequest(DB::WriteBufferFromS3::PutObjectTask const&) @ 0x13384425 in /usr/bin/clickhouse
3. ? @ 0x133858fd in /usr/bin/clickhouse
4. ? @ 0x7cf9558 in /usr/bin/clickhouse
5. void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<std::__1::function<std::__1::future<void> (std::__1::function<void ()>&&, unsigned long)> DB::threadPoolCallbackRunner<void>(ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)::'lambda'(std::__1::function<void ()>&&, unsigned long)::operator()(std::__1::function<void ()>&&, unsigned long)::'lambda0'(), void ()>>(std::__1::__function::__policy_storage const*) @ 0x7cf9040 in /usr/bin/clickhouse
6. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__1::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0xe809096 in /usr/bin/clickhouse
7. void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::__1::function<void ()>, long, std::__1::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'(), void ()>>(std::__1::__function::__policy_storage const*) @ 0xe80b8b5 in /usr/bin/clickhouse
8. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xe8056b6 in /usr/bin/clickhouse
9. ? @ 0xe80a881 in /usr/bin/clickhouse
10. ? @ 0x7fac32ea2609 in ?
11. __clone @ 0x7fac32dc7133 in ?
 (version 22.12.1.1752 (official build))
2022.12.21 16:26:37.872079 [ 242 ] {} <Error> virtual DB::WriteIndirectBufferFromRemoteFS::~WriteIndirectBufferFromRemoteFS(): Code: 499. DB::Exception: Message: The specified bucket does not exist, Key: data/xoi/rstfzhohmampuvookyhxxxnhazmzq, Bucket: ltx-eu-west-1-datalake-bronze, Object size: 4, WithPool: true. (S3_ERROR), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked const&, int, bool) @ 0xe74c47a in /usr/bin/clickhouse
1. ? @ 0x1338458a in /usr/bin/clickhouse
2. DB::WriteBufferFromS3::processPutRequest(DB::WriteBufferFromS3::PutObjectTask const&) @ 0x13384425 in /usr/bin/clickhouse
3. ? @ 0x133858fd in /usr/bin/clickhouse
4. ? @ 0x7cf9558 in /usr/bin/clickhouse
5. void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<std::__1::function<std::__1::future<void> (std::__1::function<void ()>&&, unsigned long)> DB::threadPoolCallbackRunner<void>(ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)::'lambda'(std::__1::function<void ()>&&, unsigned long)::operator()(std::__1::function<void ()>&&, unsigned long)::'lambda0'(), void ()>>(std::__1::__function::__policy_storage const*) @ 0x7cf9040 in /usr/bin/clickhouse
6. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__1::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0xe809096 in /usr/bin/clickhouse
7. void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::__1::function<void ()>, long, std::__1::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'(), void ()>>(std::__1::__function::__policy_storage const*) @ 0xe80b8b5 in /usr/bin/clickhouse
8. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xe8056b6 in /usr/bin/clickhouse
9. ? @ 0xe80a881 in /usr/bin/clickhouse
10. ? @ 0x7fac32ea2609 in ?
11. __clone @ 0x7fac32dc7133 in ?
 (version 22.12.1.1752 (official build))
2022.12.21 16:26:37.873028 [ 242 ] {} <Error> void DB::SystemLog<DB::TraceLogElement>::flushImpl(const std::vector<LogElement> &, uint64_t) [LogElement = DB::TraceLogElement]: Code: 107. DB::ErrnoException: Cannot open file /var/lib/clickhouse/disks/minio/clickhouse_access_check_be2b791f-6622-41f9-bee3-840fe7a1e080, errno: 2, strerror: No such file or directory: While checking access for disk minio. (FILE_DOESNT_EXIST), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked const&, int, bool) @ 0xe74c47a in /usr/bin/clickhouse
1. ? @ 0xe74d253 in /usr/bin/clickhouse
2. DB::throwFromErrnoWithPath(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, int, int) @ 0xe74d591 in /usr/bin/clickhouse
3. DB::OpenedFile::open() const @ 0x1304e4d4 in /usr/bin/clickhouse
4. DB::OpenedFile::getFD() const @ 0x1304e574 in /usr/bin/clickhouse
5. ? @ 0x1304c1fe in /usr/bin/clickhouse
6. DB::createReadBufferFromFileBase(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::ReadSettings const&, std::__1::optional<unsigned long>, std::__1::optional<unsigned long>, int, char*, unsigned long) @ 0x1304bcfb in /usr/bin/clickhouse
7. DB::DiskLocal::readFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::ReadSettings const&, std::__1::optional<unsigned long>, std::__1::optional<unsigned long>) const @ 0x13799412 in /usr/bin/clickhouse
8. DB::MetadataStorageFromDisk::readFileToString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const @ 0x138131ef in /usr/bin/clickhouse
9. DB::MetadataStorageFromDisk::readMetadataUnlocked(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_lock<std::__1::shared_mutex>&) const @ 0x1381337c in /usr/bin/clickhouse
10. DB::MetadataStorageFromDisk::getStorageObjects(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const @ 0x13813c7d in /usr/bin/clickhouse
11. DB::DiskObjectStorage::readFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::ReadSettings const&, std::__1::optional<unsigned long>, std::__1::optional<unsigned long>) const @ 0x137b1059 in /usr/bin/clickhouse
12. DB::IDisk::checkAccessImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) @ 0x13791778 in /usr/bin/clickhouse
13. DB::IDisk::checkAccess() @ 0x137914c3 in /usr/bin/clickhouse
14. DB::IDisk::startup(std::__1::shared_ptr<DB::Context const>, bool) @ 0x13791051 in /usr/bin/clickhouse
15. ? @ 0x137f393d in /usr/bin/clickhouse
16. DB::DiskFactory::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::shared_ptr<DB::IDisk>>>> const&) const @ 0x13794484 in /usr/bin/clickhouse
17. DB::DiskSelector::initialize(Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>) @ 0x139645ed in /usr/bin/clickhouse
18. DB::Context::getDiskSelector(std::__1::lock_guard<std::__1::mutex>&) const @ 0x139301d6 in /usr/bin/clickhouse
19. DB::Context::getStoragePolicySelector(std::__1::lock_guard<std::__1::mutex>&) const @ 0x1390a5b3 in /usr/bin/clickhouse
20. DB::Context::getStoragePolicy(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const @ 0x139304a0 in /usr/bin/clickhouse
21. DB::MergeTreeData::MergeTreeData(DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::StorageInMemoryMetadata const&, std::__1::shared_ptr<DB::Context>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::MergeTreeData::MergingParams const&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings>>, bool, bool, std::__1::function<void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>) @ 0x14df1e6c in /usr/bin/clickhouse
22. DB::StorageMergeTree::StorageMergeTree(DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::StorageInMemoryMetadata const&, bool, std::__1::shared_ptr<DB::Context>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::MergeTreeData::MergingParams const&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings>>, bool) @ 0x151c752e in /usr/bin/clickhouse
23. ? @ 0x151bda44 in /usr/bin/clickhouse
24. DB::StorageFactory::get(DB::ASTCreateQuery const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context>, std::__1::shared_ptr<DB::Context>, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, bool) const @ 0x1497772a in /usr/bin/clickhouse
25. DB::InterpreterCreateQuery::doCreateTable(DB::ASTCreateQuery&, DB::InterpreterCreateQuery::TableProperties const&, std::__1::unique_ptr<DB::DDLGuard, std::__1::default_delete<DB::DDLGuard>>&) @ 0x13e3a9a7 in /usr/bin/clickhouse
26. DB::InterpreterCreateQuery::createTable(DB::ASTCreateQuery&) @ 0x13e35187 in /usr/bin/clickhouse
27. DB::InterpreterCreateQuery::execute() @ 0x13e3eb0d in /usr/bin/clickhouse
28. DB::SystemLog<DB::TraceLogElement>::prepareTable() @ 0x145159d1 in /usr/bin/clickhouse
29. DB::SystemLog<DB::TraceLogElement>::flushImpl(std::__1::vector<DB::TraceLogElement, std::__1::allocator<DB::TraceLogElement>> const&, unsigned long) @ 0x1451778d in /usr/bin/clickhouse
30. DB::SystemLog<DB::TraceLogElement>::savingThreadFunction() @ 0x14516440 in /usr/bin/clickhouse
31. ? @ 0xe840a2f in /usr/bin/clickhouse
 (version 22.12.1.1752 (official build))
2022.12.21 16:26:38.750736 [ 244 ] {} <Error> virtual DB::WriteIndirectBufferFromRemoteFS::~WriteIndirectBufferFromRemoteFS(): Code: 499. DB::Exception: Message: The specified bucket does not exist, Key: data/lqp/yyirbxozmfbkmhvzrgruxfnwmhyth, Bucket: ltx-eu-west-1-datalake-bronze, Object size: 4, WithPool: true. (S3_ERROR), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked const&, int, bool) @ 0xe74c47a in /usr/bin/clickhouse
1. ? @ 0x1338458a in /usr/bin/clickhouse
2. DB::WriteBufferFromS3::processPutRequest(DB::WriteBufferFromS3::PutObjectTask const&) @ 0x13384425 in /usr/bin/clickhouse
3. ? @ 0x133858fd in /usr/bin/clickhouse
4. ? @ 0x7cf9558 in /usr/bin/clickhouse
5. void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<std::__1::function<std::__1::future<void> (std::__1::function<void ()>&&, unsigned long)> DB::threadPoolCallbackRunner<void>(ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)::'lambda'(std::__1::function<void ()>&&, unsigned long)::operator()(std::__1::function<void ()>&&, unsigned long)::'lambda0'(), void ()>>(std::__1::__function::__policy_storage const*) @ 0x7cf9040 in /usr/bin/clickhouse
6. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__1::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0xe809096 in /usr/bin/clickhouse
7. void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::__1::function<void ()>, long, std::__1::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'(), void ()>>(std::__1::__function::__policy_storage const*) @ 0xe80b8b5 in /usr/bin/clickhouse
8. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xe8056b6 in /usr/bin/clickhouse
9. ? @ 0xe80a881 in /usr/bin/clickhouse
10. ? @ 0x7fac32ea2609 in ?
11. __clone @ 0x7fac32dc7133 in ?
 (version 22.12.1.1752 (official build))
2022.12.21 16:26:38.752123 [ 244 ] {} <Error> void DB::SystemLog<DB::MetricLogElement>::flushImpl(const std::vector<LogElement> &, uint64_t) [LogElement = DB::MetricLogElement]: Code: 107. DB::ErrnoException: Cannot open file /var/lib/clickhouse/disks/minio/clickhouse_access_check_be2b791f-6622-41f9-bee3-840fe7a1e080, errno: 2, strerror: No such file or directory: While checking access for disk minio. (FILE_DOESNT_EXIST), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked const&, int, bool) @ 0xe74c47a in /usr/bin/clickhouse
1. ? @ 0xe74d253 in /usr/bin/clickhouse
2. DB::throwFromErrnoWithPath(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, int, int) @ 0xe74d591 in /usr/bin/clickhouse
3. DB::OpenedFile::open() const @ 0x1304e4d4 in /usr/bin/clickhouse
4. DB::OpenedFile::getFD() const @ 0x1304e574 in /usr/bin/clickhouse
5. ? @ 0x1304c1fe in /usr/bin/clickhouse
6. DB::createReadBufferFromFileBase(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::ReadSettings const&, std::__1::optional<unsigned long>, std::__1::optional<unsigned long>, int, char*, unsigned long) @ 0x1304bcfb in /usr/bin/clickhouse
7. DB::DiskLocal::readFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::ReadSettings const&, std::__1::optional<unsigned long>, std::__1::optional<unsigned long>) const @ 0x13799412 in /usr/bin/clickhouse
8. DB::MetadataStorageFromDisk::readFileToString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const @ 0x138131ef in /usr/bin/clickhouse
9. DB::MetadataStorageFromDisk::readMetadataUnlocked(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_lock<std::__1::shared_mutex>&) const @ 0x1381337c in /usr/bin/clickhouse
10. DB::MetadataStorageFromDisk::getStorageObjects(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const @ 0x13813c7d in /usr/bin/clickhouse
11. DB::DiskObjectStorage::readFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::ReadSettings const&, std::__1::optional<unsigned long>, std::__1::optional<unsigned long>) const @ 0x137b1059 in /usr/bin/clickhouse
12. DB::IDisk::checkAccessImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) @ 0x13791778 in /usr/bin/clickhouse
13. DB::IDisk::checkAccess() @ 0x137914c3 in /usr/bin/clickhouse
14. DB::IDisk::startup(std::__1::shared_ptr<DB::Context const>, bool) @ 0x13791051 in /usr/bin/clickhouse
15. ? @ 0x137f393d in /usr/bin/clickhouse
16. DB::DiskFactory::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::shared_ptr<DB::IDisk>>>> const&) const @ 0x13794484 in /usr/bin/clickhouse
17. DB::DiskSelector::initialize(Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>) @ 0x139645ed in /usr/bin/clickhouse
18. DB::Context::getDiskSelector(std::__1::lock_guard<std::__1::mutex>&) const @ 0x139301d6 in /usr/bin/clickhouse
19. DB::Context::getStoragePolicySelector(std::__1::lock_guard<std::__1::mutex>&) const @ 0x1390a5b3 in /usr/bin/clickhouse
20. DB::Context::getStoragePolicy(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const @ 0x139304a0 in /usr/bin/clickhouse
21. DB::MergeTreeData::MergeTreeData(DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::StorageInMemoryMetadata const&, std::__1::shared_ptr<DB::Context>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::MergeTreeData::MergingParams const&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings>>, bool, bool, std::__1::function<void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>) @ 0x14df1e6c in /usr/bin/clickhouse
22. DB::StorageMergeTree::StorageMergeTree(DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::StorageInMemoryMetadata const&, bool, std::__1::shared_ptr<DB::Context>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::MergeTreeData::MergingParams const&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings>>, bool) @ 0x151c752e in /usr/bin/clickhouse
23. ? @ 0x151bda44 in /usr/bin/clickhouse
24. DB::StorageFactory::get(DB::ASTCreateQuery const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context>, std::__1::shared_ptr<DB::Context>, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, bool) const @ 0x1497772a in /usr/bin/clickhouse
25. DB::InterpreterCreateQuery::doCreateTable(DB::ASTCreateQuery&, DB::InterpreterCreateQuery::TableProperties const&, std::__1::unique_ptr<DB::DDLGuard, std::__1::default_delete<DB::DDLGuard>>&) @ 0x13e3a9a7 in /usr/bin/clickhouse
26. DB::InterpreterCreateQuery::createTable(DB::ASTCreateQuery&) @ 0x13e35187 in /usr/bin/clickhouse
27. DB::InterpreterCreateQuery::execute() @ 0x13e3eb0d in /usr/bin/clickhouse
28. DB::SystemLog<DB::MetricLogElement>::prepareTable() @ 0x144ea951 in /usr/bin/clickhouse
29. DB::SystemLog<DB::MetricLogElement>::flushImpl(std::__1::vector<DB::MetricLogElement, std::__1::allocator<DB::MetricLogElement>> const&, unsigned long) @ 0x144eca2d in /usr/bin/clickhouse
30. DB::SystemLog<DB::MetricLogElement>::savingThreadFunction() @ 0x144eb3d2 in /usr/bin/clickhouse
31. ? @ 0xe840a2f in /usr/bin/clickhouse
 (version 22.12.1.1752 (official build))
2022.12.21 16:26:38.763317 [ 1 ] {} <Error> Application: Code: 107. DB::ErrnoException: Cannot open file /var/lib/clickhouse/disks/minio/clickhouse_access_check_be2b791f-6622-41f9-bee3-840fe7a1e080, errno: 2, strerror: No such file or directory: While checking access for disk minio. (FILE_DOESNT_EXIST), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked const&, int, bool) @ 0xe74c47a in /usr/bin/clickhouse
1. ? @ 0xe74d253 in /usr/bin/clickhouse
2. DB::throwFromErrnoWithPath(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, int, int) @ 0xe74d591 in /usr/bin/clickhouse
3. DB::OpenedFile::open() const @ 0x1304e4d4 in /usr/bin/clickhouse
4. DB::OpenedFile::getFD() const @ 0x1304e574 in /usr/bin/clickhouse
5. ? @ 0x1304c1fe in /usr/bin/clickhouse
6. DB::createReadBufferFromFileBase(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::ReadSettings const&, std::__1::optional<unsigned long>, std::__1::optional<unsigned long>, int, char*, unsigned long) @ 0x1304bcfb in /usr/bin/clickhouse
7. DB::DiskLocal::readFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::ReadSettings const&, std::__1::optional<unsigned long>, std::__1::optional<unsigned long>) const @ 0x13799412 in /usr/bin/clickhouse
8. DB::MetadataStorageFromDisk::readFileToString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const @ 0x138131ef in /usr/bin/clickhouse
9. DB::MetadataStorageFromDisk::readMetadataUnlocked(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_lock<std::__1::shared_mutex>&) const @ 0x1381337c in /usr/bin/clickhouse
10. DB::MetadataStorageFromDisk::getStorageObjects(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const @ 0x13813c7d in /usr/bin/clickhouse
11. DB::DiskObjectStorage::readFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::ReadSettings const&, std::__1::optional<unsigned long>, std::__1::optional<unsigned long>) const @ 0x137b1059 in /usr/bin/clickhouse
12. DB::IDisk::checkAccessImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) @ 0x13791778 in /usr/bin/clickhouse
13. DB::IDisk::checkAccess() @ 0x137914c3 in /usr/bin/clickhouse
14. DB::IDisk::startup(std::__1::shared_ptr<DB::Context const>, bool) @ 0x13791051 in /usr/bin/clickhouse
15. ? @ 0x137f393d in /usr/bin/clickhouse
16. DB::DiskFactory::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::shared_ptr<DB::IDisk>>>> const&) const @ 0x13794484 in /usr/bin/clickhouse
17. DB::DiskSelector::initialize(Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>) @ 0x139645ed in /usr/bin/clickhouse
18. DB::Context::getDiskSelector(std::__1::lock_guard<std::__1::mutex>&) const @ 0x139301d6 in /usr/bin/clickhouse
19. DB::Context::getDisksMap() const @ 0x13930640 in /usr/bin/clickhouse
20. DB::ServerAsynchronousMetrics::updateImpl(std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DB::AsynchronousMetricValue, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, DB::AsynchronousMetricValue>>>&, std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000l>>>, std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000l>>>) @ 0x14493e26 in /usr/bin/clickhouse
21. DB::AsynchronousMetrics::update(std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000l>>>) @ 0xe85a0ad in /usr/bin/clickhouse
22. DB::AsynchronousMetrics::start() @ 0xe84b941 in /usr/bin/clickhouse
23. DB::Server::main(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) @ 0xe7dde20 in /usr/bin/clickhouse
24. Poco::Util::Application::run() @ 0x182265e2 in /usr/bin/clickhouse
25. DB::Server::run() @ 0xe7ca3bc in /usr/bin/clickhouse
26. Poco::Util::ServerApplication::run(int, char**) @ 0x1823a93a in /usr/bin/clickhouse
27. mainEntryClickHouseServer(int, char**) @ 0xe7c6e29 in /usr/bin/clickhouse
28. main @ 0x7eae9d3 in /usr/bin/clickhouse
29. __libc_start_main @ 0x7fac32ccc083 in ?
30. _start @ 0x7bae76e in /usr/bin/clickhouse
 (version 22.12.1.1752 (official build))
2022.12.21 16:26:38.763835 [ 1 ] {} <Error> Application: DB::ErrnoException: Cannot open file /var/lib/clickhouse/disks/minio/clickhouse_access_check_be2b791f-6622-41f9-bee3-840fe7a1e080, errno: 2, strerror: No such file or directory: While checking access for disk minio
2022.12.21 16:27:00.961679 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2022.12.21 16:27:01.416616 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:27:01.417347 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:27:01.417995 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:27:01.418796 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:27:01.460511 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:27:01.472933 [ 1 ] {} <Error> virtual DB::WriteIndirectBufferFromRemoteFS::~WriteIndirectBufferFromRemoteFS(): Code: 499. DB::Exception: Message: The specified bucket does not exist, Key: data/ple/ahnapwifyjthoigzwupncozugatgl, Bucket: ltx-eu-west-1-datalake-bronze, Object size: 4, WithPool: true. (S3_ERROR), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked const&, int, bool) @ 0xe74c47a in /usr/bin/clickhouse
1. ? @ 0x1338458a in /usr/bin/clickhouse
2. DB::WriteBufferFromS3::processPutRequest(DB::WriteBufferFromS3::PutObjectTask const&) @ 0x13384425 in /usr/bin/clickhouse
3. ? @ 0x133858fd in /usr/bin/clickhouse
4. ? @ 0x7cf9558 in /usr/bin/clickhouse
5. void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<std::__1::function<std::__1::future<void> (std::__1::function<void ()>&&, unsigned long)> DB::threadPoolCallbackRunner<void>(ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)::'lambda'(std::__1::function<void ()>&&, unsigned long)::operator()(std::__1::function<void ()>&&, unsigned long)::'lambda0'(), void ()>>(std::__1::__function::__policy_storage const*) @ 0x7cf9040 in /usr/bin/clickhouse
6. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__1::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0xe809096 in /usr/bin/clickhouse
7. void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::__1::function<void ()>, long, std::__1::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'(), void ()>>(std::__1::__function::__policy_storage const*) @ 0xe80b8b5 in /usr/bin/clickhouse
8. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xe8056b6 in /usr/bin/clickhouse
9. ? @ 0xe80a881 in /usr/bin/clickhouse
10. ? @ 0x7fba959d5609 in ?
11. __clone @ 0x7fba958fa133 in ?
 (version 22.12.1.1752 (official build))
2022.12.21 16:27:01.485497 [ 244 ] {} <Error> virtual DB::WriteIndirectBufferFromRemoteFS::~WriteIndirectBufferFromRemoteFS(): Code: 499. DB::Exception: Message: The specified bucket does not exist, Key: data/sdn/fevynlirdayemzfyathjzdzggqvwj, Bucket: ltx-eu-west-1-datalake-bronze, Object size: 4, WithPool: true. (S3_ERROR), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked const&, int, bool) @ 0xe74c47a in /usr/bin/clickhouse
1. ? @ 0x1338458a in /usr/bin/clickhouse
2. DB::WriteBufferFromS3::processPutRequest(DB::WriteBufferFromS3::PutObjectTask const&) @ 0x13384425 in /usr/bin/clickhouse
3. ? @ 0x133858fd in /usr/bin/clickhouse
4. ? @ 0x7cf9558 in /usr/bin/clickhouse
5. void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<std::__1::function<std::__1::future<void> (std::__1::function<void ()>&&, unsigned long)> DB::threadPoolCallbackRunner<void>(ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)::'lambda'(std::__1::function<void ()>&&, unsigned long)::operator()(std::__1::function<void ()>&&, unsigned long)::'lambda0'(), void ()>>(std::__1::__function::__policy_storage const*) @ 0x7cf9040 in /usr/bin/clickhouse
6. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__1::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0xe809096 in /usr/bin/clickhouse
7. void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::__1::function<void ()>, long, std::__1::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'(), void ()>>(std::__1::__function::__policy_storage const*) @ 0xe80b8b5 in /usr/bin/clickhouse
8. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xe8056b6 in /usr/bin/clickhouse
9. ? @ 0xe80a881 in /usr/bin/clickhouse
10. ? @ 0x7fba959d5609 in ?
11. __clone @ 0x7fba958fa133 in ?
 (version 22.12.1.1752 (official build))
2022.12.21 16:27:01.487302 [ 244 ] {} <Error> void DB::SystemLog<DB::TraceLogElement>::flushImpl(const std::vector<LogElement> &, uint64_t) [LogElement = DB::TraceLogElement]: Code: 107. DB::ErrnoException: Cannot open file /var/lib/clickhouse/disks/minio/clickhouse_access_check_be2b791f-6622-41f9-bee3-840fe7a1e080, errno: 2, strerror: No such file or directory: While checking access for disk minio. (FILE_DOESNT_EXIST), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked const&, int, bool) @ 0xe74c47a in /usr/bin/clickhouse
1. ? @ 0xe74d253 in /usr/bin/clickhouse
2. DB::throwFromErrnoWithPath(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, int, int) @ 0xe74d591 in /usr/bin/clickhouse
3. DB::OpenedFile::open() const @ 0x1304e4d4 in /usr/bin/clickhouse
4. DB::OpenedFile::getFD() const @ 0x1304e574 in /usr/bin/clickhouse
5. ? @ 0x1304c1fe in /usr/bin/clickhouse
6. DB::createReadBufferFromFileBase(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::ReadSettings const&, std::__1::optional<unsigned long>, std::__1::optional<unsigned long>, int, char*, unsigned long) @ 0x1304bcfb in /usr/bin/clickhouse
7. DB::DiskLocal::readFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::ReadSettings const&, std::__1::optional<unsigned long>, std::__1::optional<unsigned long>) const @ 0x13799412 in /usr/bin/clickhouse
8. DB::MetadataStorageFromDisk::readFileToString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const @ 0x138131ef in /usr/bin/clickhouse
9. DB::MetadataStorageFromDisk::readMetadataUnlocked(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_lock<std::__1::shared_mutex>&) const @ 0x1381337c in /usr/bin/clickhouse
10. DB::MetadataStorageFromDisk::getStorageObjects(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const @ 0x13813c7d in /usr/bin/clickhouse
11. DB::DiskObjectStorage::readFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::ReadSettings const&, std::__1::optional<unsigned long>, std::__1::optional<unsigned long>) const @ 0x137b1059 in /usr/bin/clickhouse
12. DB::IDisk::checkAccessImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) @ 0x13791778 in /usr/bin/clickhouse
13. DB::IDisk::checkAccess() @ 0x137914c3 in /usr/bin/clickhouse
14. DB::IDisk::startup(std::__1::shared_ptr<DB::Context const>, bool) @ 0x13791051 in /usr/bin/clickhouse
15. ? @ 0x137f393d in /usr/bin/clickhouse
16. DB::DiskFactory::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::shared_ptr<DB::IDisk>>>> const&) const @ 0x13794484 in /usr/bin/clickhouse
17. DB::DiskSelector::initialize(Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>) @ 0x139645ed in /usr/bin/clickhouse
18. DB::Context::getDiskSelector(std::__1::lock_guard<std::__1::mutex>&) const @ 0x139301d6 in /usr/bin/clickhouse
19. DB::Context::getStoragePolicySelector(std::__1::lock_guard<std::__1::mutex>&) const @ 0x1390a5b3 in /usr/bin/clickhouse
20. DB::Context::getStoragePolicy(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const @ 0x139304a0 in /usr/bin/clickhouse
21. DB::MergeTreeData::MergeTreeData(DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::StorageInMemoryMetadata const&, std::__1::shared_ptr<DB::Context>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::MergeTreeData::MergingParams const&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings>>, bool, bool, std::__1::function<void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>) @ 0x14df1e6c in /usr/bin/clickhouse
22. DB::StorageMergeTree::StorageMergeTree(DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::StorageInMemoryMetadata const&, bool, std::__1::shared_ptr<DB::Context>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::MergeTreeData::MergingParams const&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings>>, bool) @ 0x151c752e in /usr/bin/clickhouse
23. ? @ 0x151bda44 in /usr/bin/clickhouse
24. DB::StorageFactory::get(DB::ASTCreateQuery const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context>, std::__1::shared_ptr<DB::Context>, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, bool) const @ 0x1497772a in /usr/bin/clickhouse
25. DB::InterpreterCreateQuery::doCreateTable(DB::ASTCreateQuery&, DB::InterpreterCreateQuery::TableProperties const&, std::__1::unique_ptr<DB::DDLGuard, std::__1::default_delete<DB::DDLGuard>>&) @ 0x13e3a9a7 in /usr/bin/clickhouse
26. DB::InterpreterCreateQuery::createTable(DB::ASTCreateQuery&) @ 0x13e35187 in /usr/bin/clickhouse
27. DB::InterpreterCreateQuery::execute() @ 0x13e3eb0d in /usr/bin/clickhouse
28. DB::SystemLog<DB::TraceLogElement>::prepareTable() @ 0x145159d1 in /usr/bin/clickhouse
29. DB::SystemLog<DB::TraceLogElement>::flushImpl(std::__1::vector<DB::TraceLogElement, std::__1::allocator<DB::TraceLogElement>> const&, unsigned long) @ 0x1451778d in /usr/bin/clickhouse
30. DB::SystemLog<DB::TraceLogElement>::savingThreadFunction() @ 0x14516440 in /usr/bin/clickhouse
31. ? @ 0xe840a2f in /usr/bin/clickhouse
 (version 22.12.1.1752 (official build))
2022.12.21 16:27:02.412742 [ 246 ] {} <Error> virtual DB::WriteIndirectBufferFromRemoteFS::~WriteIndirectBufferFromRemoteFS(): Code: 499. DB::Exception: Message: The specified bucket does not exist, Key: data/jgc/fpqygejtbjsdkpiyloppkrxymbacu, Bucket: ltx-eu-west-1-datalake-bronze, Object size: 4, WithPool: true. (S3_ERROR), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked const&, int, bool) @ 0xe74c47a in /usr/bin/clickhouse
1. ? @ 0x1338458a in /usr/bin/clickhouse
2. DB::WriteBufferFromS3::processPutRequest(DB::WriteBufferFromS3::PutObjectTask const&) @ 0x13384425 in /usr/bin/clickhouse
3. ? @ 0x133858fd in /usr/bin/clickhouse
4. ? @ 0x7cf9558 in /usr/bin/clickhouse
5. void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<std::__1::function<std::__1::future<void> (std::__1::function<void ()>&&, unsigned long)> DB::threadPoolCallbackRunner<void>(ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)::'lambda'(std::__1::function<void ()>&&, unsigned long)::operator()(std::__1::function<void ()>&&, unsigned long)::'lambda0'(), void ()>>(std::__1::__function::__policy_storage const*) @ 0x7cf9040 in /usr/bin/clickhouse
6. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__1::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0xe809096 in /usr/bin/clickhouse
7. void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::__1::function<void ()>, long, std::__1::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'(), void ()>>(std::__1::__function::__policy_storage const*) @ 0xe80b8b5 in /usr/bin/clickhouse
8. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xe8056b6 in /usr/bin/clickhouse
9. ? @ 0xe80a881 in /usr/bin/clickhouse
10. ? @ 0x7fba959d5609 in ?
11. __clone @ 0x7fba958fa133 in ?
 (version 22.12.1.1752 (official build))
2022.12.21 16:27:02.413815 [ 246 ] {} <Error> void DB::SystemLog<DB::MetricLogElement>::flushImpl(const std::vector<LogElement> &, uint64_t) [LogElement = DB::MetricLogElement]: Code: 107. DB::ErrnoException: Cannot open file /var/lib/clickhouse/disks/minio/clickhouse_access_check_be2b791f-6622-41f9-bee3-840fe7a1e080, errno: 2, strerror: No such file or directory: While checking access for disk minio. (FILE_DOESNT_EXIST), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked const&, int, bool) @ 0xe74c47a in /usr/bin/clickhouse
1. ? @ 0xe74d253 in /usr/bin/clickhouse
2. DB::throwFromErrnoWithPath(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, int, int) @ 0xe74d591 in /usr/bin/clickhouse
3. DB::OpenedFile::open() const @ 0x1304e4d4 in /usr/bin/clickhouse
4. DB::OpenedFile::getFD() const @ 0x1304e574 in /usr/bin/clickhouse
5. ? @ 0x1304c1fe in /usr/bin/clickhouse
6. DB::createReadBufferFromFileBase(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::ReadSettings const&, std::__1::optional<unsigned long>, std::__1::optional<unsigned long>, int, char*, unsigned long) @ 0x1304bcfb in /usr/bin/clickhouse
7. DB::DiskLocal::readFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::ReadSettings const&, std::__1::optional<unsigned long>, std::__1::optional<unsigned long>) const @ 0x13799412 in /usr/bin/clickhouse
8. DB::MetadataStorageFromDisk::readFileToString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const @ 0x138131ef in /usr/bin/clickhouse
9. DB::MetadataStorageFromDisk::readMetadataUnlocked(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_lock<std::__1::shared_mutex>&) const @ 0x1381337c in /usr/bin/clickhouse
10. DB::MetadataStorageFromDisk::getStorageObjects(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const @ 0x13813c7d in /usr/bin/clickhouse
11. DB::DiskObjectStorage::readFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::ReadSettings const&, std::__1::optional<unsigned long>, std::__1::optional<unsigned long>) const @ 0x137b1059 in /usr/bin/clickhouse
12. DB::IDisk::checkAccessImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) @ 0x13791778 in /usr/bin/clickhouse
13. DB::IDisk::checkAccess() @ 0x137914c3 in /usr/bin/clickhouse
14. DB::IDisk::startup(std::__1::shared_ptr<DB::Context const>, bool) @ 0x13791051 in /usr/bin/clickhouse
15. ? @ 0x137f393d in /usr/bin/clickhouse
16. DB::DiskFactory::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::shared_ptr<DB::IDisk>>>> const&) const @ 0x13794484 in /usr/bin/clickhouse
17. DB::DiskSelector::initialize(Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>) @ 0x139645ed in /usr/bin/clickhouse
18. DB::Context::getDiskSelector(std::__1::lock_guard<std::__1::mutex>&) const @ 0x139301d6 in /usr/bin/clickhouse
19. DB::Context::getStoragePolicySelector(std::__1::lock_guard<std::__1::mutex>&) const @ 0x1390a5b3 in /usr/bin/clickhouse
20. DB::Context::getStoragePolicy(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const @ 0x139304a0 in /usr/bin/clickhouse
21. DB::MergeTreeData::MergeTreeData(DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::StorageInMemoryMetadata const&, std::__1::shared_ptr<DB::Context>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::MergeTreeData::MergingParams const&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings>>, bool, bool, std::__1::function<void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>) @ 0x14df1e6c in /usr/bin/clickhouse
22. DB::StorageMergeTree::StorageMergeTree(DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::StorageInMemoryMetadata const&, bool, std::__1::shared_ptr<DB::Context>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::MergeTreeData::MergingParams const&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings>>, bool) @ 0x151c752e in /usr/bin/clickhouse
23. ? @ 0x151bda44 in /usr/bin/clickhouse
24. DB::StorageFactory::get(DB::ASTCreateQuery const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context>, std::__1::shared_ptr<DB::Context>, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, bool) const @ 0x1497772a in /usr/bin/clickhouse
25. DB::InterpreterCreateQuery::doCreateTable(DB::ASTCreateQuery&, DB::InterpreterCreateQuery::TableProperties const&, std::__1::unique_ptr<DB::DDLGuard, std::__1::default_delete<DB::DDLGuard>>&) @ 0x13e3a9a7 in /usr/bin/clickhouse
26. DB::InterpreterCreateQuery::createTable(DB::ASTCreateQuery&) @ 0x13e35187 in /usr/bin/clickhouse
27. DB::InterpreterCreateQuery::execute() @ 0x13e3eb0d in /usr/bin/clickhouse
28. DB::SystemLog<DB::MetricLogElement>::prepareTable() @ 0x144ea951 in /usr/bin/clickhouse
29. DB::SystemLog<DB::MetricLogElement>::flushImpl(std::__1::vector<DB::MetricLogElement, std::__1::allocator<DB::MetricLogElement>> const&, unsigned long) @ 0x144eca2d in /usr/bin/clickhouse
30. DB::SystemLog<DB::MetricLogElement>::savingThreadFunction() @ 0x144eb3d2 in /usr/bin/clickhouse
31. ? @ 0xe840a2f in /usr/bin/clickhouse
 (version 22.12.1.1752 (official build))
2022.12.21 16:27:02.425397 [ 1 ] {} <Error> Application: Code: 107. DB::ErrnoException: Cannot open file /var/lib/clickhouse/disks/minio/clickhouse_access_check_be2b791f-6622-41f9-bee3-840fe7a1e080, errno: 2, strerror: No such file or directory: While checking access for disk minio. (FILE_DOESNT_EXIST), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked const&, int, bool) @ 0xe74c47a in /usr/bin/clickhouse
1. ? @ 0xe74d253 in /usr/bin/clickhouse
2. DB::throwFromErrnoWithPath(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, int, int) @ 0xe74d591 in /usr/bin/clickhouse
3. DB::OpenedFile::open() const @ 0x1304e4d4 in /usr/bin/clickhouse
4. DB::OpenedFile::getFD() const @ 0x1304e574 in /usr/bin/clickhouse
5. ? @ 0x1304c1fe in /usr/bin/clickhouse
6. DB::createReadBufferFromFileBase(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::ReadSettings const&, std::__1::optional<unsigned long>, std::__1::optional<unsigned long>, int, char*, unsigned long) @ 0x1304bcfb in /usr/bin/clickhouse
7. DB::DiskLocal::readFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::ReadSettings const&, std::__1::optional<unsigned long>, std::__1::optional<unsigned long>) const @ 0x13799412 in /usr/bin/clickhouse
8. DB::MetadataStorageFromDisk::readFileToString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const @ 0x138131ef in /usr/bin/clickhouse
9. DB::MetadataStorageFromDisk::readMetadataUnlocked(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_lock<std::__1::shared_mutex>&) const @ 0x1381337c in /usr/bin/clickhouse
10. DB::MetadataStorageFromDisk::getStorageObjects(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const @ 0x13813c7d in /usr/bin/clickhouse
11. DB::DiskObjectStorage::readFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::ReadSettings const&, std::__1::optional<unsigned long>, std::__1::optional<unsigned long>) const @ 0x137b1059 in /usr/bin/clickhouse
12. DB::IDisk::checkAccessImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) @ 0x13791778 in /usr/bin/clickhouse
13. DB::IDisk::checkAccess() @ 0x137914c3 in /usr/bin/clickhouse
14. DB::IDisk::startup(std::__1::shared_ptr<DB::Context const>, bool) @ 0x13791051 in /usr/bin/clickhouse
15. ? @ 0x137f393d in /usr/bin/clickhouse
16. DB::DiskFactory::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::shared_ptr<DB::IDisk>>>> const&) const @ 0x13794484 in /usr/bin/clickhouse
17. DB::DiskSelector::initialize(Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>) @ 0x139645ed in /usr/bin/clickhouse
18. DB::Context::getDiskSelector(std::__1::lock_guard<std::__1::mutex>&) const @ 0x139301d6 in /usr/bin/clickhouse
19. DB::Context::getDisksMap() const @ 0x13930640 in /usr/bin/clickhouse
20. DB::ServerAsynchronousMetrics::updateImpl(std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DB::AsynchronousMetricValue, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, DB::AsynchronousMetricValue>>>&, std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000l>>>, std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000l>>>) @ 0x14493e26 in /usr/bin/clickhouse
21. DB::AsynchronousMetrics::update(std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000l>>>) @ 0xe85a0ad in /usr/bin/clickhouse
22. DB::AsynchronousMetrics::start() @ 0xe84b941 in /usr/bin/clickhouse
23. DB::Server::main(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) @ 0xe7dde20 in /usr/bin/clickhouse
24. Poco::Util::Application::run() @ 0x182265e2 in /usr/bin/clickhouse
25. DB::Server::run() @ 0xe7ca3bc in /usr/bin/clickhouse
26. Poco::Util::ServerApplication::run(int, char**) @ 0x1823a93a in /usr/bin/clickhouse
27. mainEntryClickHouseServer(int, char**) @ 0xe7c6e29 in /usr/bin/clickhouse
28. main @ 0x7eae9d3 in /usr/bin/clickhouse
29. __libc_start_main @ 0x7fba957ff083 in ?
30. _start @ 0x7bae76e in /usr/bin/clickhouse
 (version 22.12.1.1752 (official build))
2022.12.21 16:27:02.426198 [ 1 ] {} <Error> Application: DB::ErrnoException: Cannot open file /var/lib/clickhouse/disks/minio/clickhouse_access_check_be2b791f-6622-41f9-bee3-840fe7a1e080, errno: 2, strerror: No such file or directory: While checking access for disk minio
2022.12.21 16:28:40.687319 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2022.12.21 16:28:41.005064 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:28:41.005482 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:28:41.005885 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:28:41.006148 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:28:41.088198 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:31:28.268488 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2022.12.21 16:31:28.726372 [ 1 ] {} <Warning> Access(local directory): File /var/lib/clickhouse/access/users.list doesn't exist
2022.12.21 16:31:28.726880 [ 1 ] {} <Warning> Access(local directory): Recovering lists in directory /var/lib/clickhouse/access/
2022.12.21 16:31:28.911425 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:31:28.912109 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:31:28.912751 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:31:28.913378 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:31:28.969705 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:31:28.986138 [ 1 ] {} <Error> virtual DB::WriteIndirectBufferFromRemoteFS::~WriteIndirectBufferFromRemoteFS(): Code: 499. DB::Exception: Message: The specified bucket does not exist, Key: data/ebj/pbdwfiwcgdnrsdkcowlmmwobsmnya, Bucket: ltx-eu-west-1-datalake-bronze, Object size: 4, WithPool: true. (S3_ERROR), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked const&, int, bool) @ 0xe74c47a in /usr/bin/clickhouse
1. ? @ 0x1338458a in /usr/bin/clickhouse
2. DB::WriteBufferFromS3::processPutRequest(DB::WriteBufferFromS3::PutObjectTask const&) @ 0x13384425 in /usr/bin/clickhouse
3. ? @ 0x133858fd in /usr/bin/clickhouse
4. ? @ 0x7cf9558 in /usr/bin/clickhouse
5. void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<std::__1::function<std::__1::future<void> (std::__1::function<void ()>&&, unsigned long)> DB::threadPoolCallbackRunner<void>(ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)::'lambda'(std::__1::function<void ()>&&, unsigned long)::operator()(std::__1::function<void ()>&&, unsigned long)::'lambda0'(), void ()>>(std::__1::__function::__policy_storage const*) @ 0x7cf9040 in /usr/bin/clickhouse
6. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__1::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0xe809096 in /usr/bin/clickhouse
7. void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::__1::function<void ()>, long, std::__1::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'(), void ()>>(std::__1::__function::__policy_storage const*) @ 0xe80b8b5 in /usr/bin/clickhouse
8. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xe8056b6 in /usr/bin/clickhouse
9. ? @ 0xe80a881 in /usr/bin/clickhouse
10. ? @ 0x7f0ef3ab8609 in ?
11. __clone @ 0x7f0ef39dd133 in ?
 (version 22.12.1.1752 (official build))
2022.12.21 16:31:29.000537 [ 243 ] {} <Error> virtual DB::WriteIndirectBufferFromRemoteFS::~WriteIndirectBufferFromRemoteFS(): Code: 499. DB::Exception: Message: The specified bucket does not exist, Key: data/jsr/xudqyjsaubdtyyxcteqjoxlxxfrgq, Bucket: ltx-eu-west-1-datalake-bronze, Object size: 4, WithPool: true. (S3_ERROR), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked const&, int, bool) @ 0xe74c47a in /usr/bin/clickhouse
1. ? @ 0x1338458a in /usr/bin/clickhouse
2. DB::WriteBufferFromS3::processPutRequest(DB::WriteBufferFromS3::PutObjectTask const&) @ 0x13384425 in /usr/bin/clickhouse
3. ? @ 0x133858fd in /usr/bin/clickhouse
4. ? @ 0x7cf9558 in /usr/bin/clickhouse
5. void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<std::__1::function<std::__1::future<void> (std::__1::function<void ()>&&, unsigned long)> DB::threadPoolCallbackRunner<void>(ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)::'lambda'(std::__1::function<void ()>&&, unsigned long)::operator()(std::__1::function<void ()>&&, unsigned long)::'lambda0'(), void ()>>(std::__1::__function::__policy_storage const*) @ 0x7cf9040 in /usr/bin/clickhouse
6. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__1::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0xe809096 in /usr/bin/clickhouse
7. void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::__1::function<void ()>, long, std::__1::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'(), void ()>>(std::__1::__function::__policy_storage const*) @ 0xe80b8b5 in /usr/bin/clickhouse
8. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xe8056b6 in /usr/bin/clickhouse
9. ? @ 0xe80a881 in /usr/bin/clickhouse
10. ? @ 0x7f0ef3ab8609 in ?
11. __clone @ 0x7f0ef39dd133 in ?
 (version 22.12.1.1752 (official build))
2022.12.21 16:31:29.001984 [ 243 ] {} <Error> void DB::SystemLog<DB::TraceLogElement>::flushImpl(const std::vector<LogElement> &, uint64_t) [LogElement = DB::TraceLogElement]: Code: 107. DB::ErrnoException: Cannot open file /var/lib/clickhouse/disks/minio/clickhouse_access_check_b3e4e218-0bef-4420-9c95-dd53fa73d21a, errno: 2, strerror: No such file or directory: While checking access for disk minio. (FILE_DOESNT_EXIST), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked const&, int, bool) @ 0xe74c47a in /usr/bin/clickhouse
1. ? @ 0xe74d253 in /usr/bin/clickhouse
2. DB::throwFromErrnoWithPath(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, int, int) @ 0xe74d591 in /usr/bin/clickhouse
3. DB::OpenedFile::open() const @ 0x1304e4d4 in /usr/bin/clickhouse
4. DB::OpenedFile::getFD() const @ 0x1304e574 in /usr/bin/clickhouse
5. ? @ 0x1304c1fe in /usr/bin/clickhouse
6. DB::createReadBufferFromFileBase(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::ReadSettings const&, std::__1::optional<unsigned long>, std::__1::optional<unsigned long>, int, char*, unsigned long) @ 0x1304bcfb in /usr/bin/clickhouse
7. DB::DiskLocal::readFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::ReadSettings const&, std::__1::optional<unsigned long>, std::__1::optional<unsigned long>) const @ 0x13799412 in /usr/bin/clickhouse
8. DB::MetadataStorageFromDisk::readFileToString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const @ 0x138131ef in /usr/bin/clickhouse
9. DB::MetadataStorageFromDisk::readMetadataUnlocked(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_lock<std::__1::shared_mutex>&) const @ 0x1381337c in /usr/bin/clickhouse
10. DB::MetadataStorageFromDisk::getStorageObjects(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const @ 0x13813c7d in /usr/bin/clickhouse
11. DB::DiskObjectStorage::readFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::ReadSettings const&, std::__1::optional<unsigned long>, std::__1::optional<unsigned long>) const @ 0x137b1059 in /usr/bin/clickhouse
12. DB::IDisk::checkAccessImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) @ 0x13791778 in /usr/bin/clickhouse
13. DB::IDisk::checkAccess() @ 0x137914c3 in /usr/bin/clickhouse
14. DB::IDisk::startup(std::__1::shared_ptr<DB::Context const>, bool) @ 0x13791051 in /usr/bin/clickhouse
15. ? @ 0x137f393d in /usr/bin/clickhouse
16. DB::DiskFactory::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::shared_ptr<DB::IDisk>>>> const&) const @ 0x13794484 in /usr/bin/clickhouse
17. DB::DiskSelector::initialize(Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>) @ 0x139645ed in /usr/bin/clickhouse
18. DB::Context::getDiskSelector(std::__1::lock_guard<std::__1::mutex>&) const @ 0x139301d6 in /usr/bin/clickhouse
19. DB::Context::getStoragePolicySelector(std::__1::lock_guard<std::__1::mutex>&) const @ 0x1390a5b3 in /usr/bin/clickhouse
20. DB::Context::getStoragePolicy(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const @ 0x139304a0 in /usr/bin/clickhouse
21. DB::MergeTreeData::MergeTreeData(DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::StorageInMemoryMetadata const&, std::__1::shared_ptr<DB::Context>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::MergeTreeData::MergingParams const&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings>>, bool, bool, std::__1::function<void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>) @ 0x14df1e6c in /usr/bin/clickhouse
22. DB::StorageMergeTree::StorageMergeTree(DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::StorageInMemoryMetadata const&, bool, std::__1::shared_ptr<DB::Context>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::MergeTreeData::MergingParams const&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings>>, bool) @ 0x151c752e in /usr/bin/clickhouse
23. ? @ 0x151bda44 in /usr/bin/clickhouse
24. DB::StorageFactory::get(DB::ASTCreateQuery const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context>, std::__1::shared_ptr<DB::Context>, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, bool) const @ 0x1497772a in /usr/bin/clickhouse
25. DB::InterpreterCreateQuery::doCreateTable(DB::ASTCreateQuery&, DB::InterpreterCreateQuery::TableProperties const&, std::__1::unique_ptr<DB::DDLGuard, std::__1::default_delete<DB::DDLGuard>>&) @ 0x13e3a9a7 in /usr/bin/clickhouse
26. DB::InterpreterCreateQuery::createTable(DB::ASTCreateQuery&) @ 0x13e35187 in /usr/bin/clickhouse
27. DB::InterpreterCreateQuery::execute() @ 0x13e3eb0d in /usr/bin/clickhouse
28. DB::SystemLog<DB::TraceLogElement>::prepareTable() @ 0x145159d1 in /usr/bin/clickhouse
29. DB::SystemLog<DB::TraceLogElement>::flushImpl(std::__1::vector<DB::TraceLogElement, std::__1::allocator<DB::TraceLogElement>> const&, unsigned long) @ 0x1451778d in /usr/bin/clickhouse
30. DB::SystemLog<DB::TraceLogElement>::savingThreadFunction() @ 0x14516440 in /usr/bin/clickhouse
31. ? @ 0xe840a2f in /usr/bin/clickhouse
 (version 22.12.1.1752 (official build))
2022.12.21 16:31:29.897268 [ 245 ] {} <Error> virtual DB::WriteIndirectBufferFromRemoteFS::~WriteIndirectBufferFromRemoteFS(): Code: 499. DB::Exception: Message: The specified bucket does not exist, Key: data/vqy/ybcpafwnjncmefkhgaovuekzyjgou, Bucket: ltx-eu-west-1-datalake-bronze, Object size: 4, WithPool: true. (S3_ERROR), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked const&, int, bool) @ 0xe74c47a in /usr/bin/clickhouse
1. ? @ 0x1338458a in /usr/bin/clickhouse
2. DB::WriteBufferFromS3::processPutRequest(DB::WriteBufferFromS3::PutObjectTask const&) @ 0x13384425 in /usr/bin/clickhouse
3. ? @ 0x133858fd in /usr/bin/clickhouse
4. ? @ 0x7cf9558 in /usr/bin/clickhouse
5. void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<std::__1::function<std::__1::future<void> (std::__1::function<void ()>&&, unsigned long)> DB::threadPoolCallbackRunner<void>(ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)::'lambda'(std::__1::function<void ()>&&, unsigned long)::operator()(std::__1::function<void ()>&&, unsigned long)::'lambda0'(), void ()>>(std::__1::__function::__policy_storage const*) @ 0x7cf9040 in /usr/bin/clickhouse
6. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__1::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0xe809096 in /usr/bin/clickhouse
7. void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::__1::function<void ()>, long, std::__1::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'(), void ()>>(std::__1::__function::__policy_storage const*) @ 0xe80b8b5 in /usr/bin/clickhouse
8. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xe8056b6 in /usr/bin/clickhouse
9. ? @ 0xe80a881 in /usr/bin/clickhouse
10. ? @ 0x7f0ef3ab8609 in ?
11. __clone @ 0x7f0ef39dd133 in ?
 (version 22.12.1.1752 (official build))
2022.12.21 16:31:29.900633 [ 245 ] {} <Error> void DB::SystemLog<DB::MetricLogElement>::flushImpl(const std::vector<LogElement> &, uint64_t) [LogElement = DB::MetricLogElement]: Code: 107. DB::ErrnoException: Cannot open file /var/lib/clickhouse/disks/minio/clickhouse_access_check_b3e4e218-0bef-4420-9c95-dd53fa73d21a, errno: 2, strerror: No such file or directory: While checking access for disk minio. (FILE_DOESNT_EXIST), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked const&, int, bool) @ 0xe74c47a in /usr/bin/clickhouse
1. ? @ 0xe74d253 in /usr/bin/clickhouse
2. DB::throwFromErrnoWithPath(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, int, int) @ 0xe74d591 in /usr/bin/clickhouse
3. DB::OpenedFile::open() const @ 0x1304e4d4 in /usr/bin/clickhouse
4. DB::OpenedFile::getFD() const @ 0x1304e574 in /usr/bin/clickhouse
5. ? @ 0x1304c1fe in /usr/bin/clickhouse
6. DB::createReadBufferFromFileBase(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::ReadSettings const&, std::__1::optional<unsigned long>, std::__1::optional<unsigned long>, int, char*, unsigned long) @ 0x1304bcfb in /usr/bin/clickhouse
7. DB::DiskLocal::readFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::ReadSettings const&, std::__1::optional<unsigned long>, std::__1::optional<unsigned long>) const @ 0x13799412 in /usr/bin/clickhouse
8. DB::MetadataStorageFromDisk::readFileToString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const @ 0x138131ef in /usr/bin/clickhouse
9. DB::MetadataStorageFromDisk::readMetadataUnlocked(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_lock<std::__1::shared_mutex>&) const @ 0x1381337c in /usr/bin/clickhouse
10. DB::MetadataStorageFromDisk::getStorageObjects(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const @ 0x13813c7d in /usr/bin/clickhouse
11. DB::DiskObjectStorage::readFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::ReadSettings const&, std::__1::optional<unsigned long>, std::__1::optional<unsigned long>) const @ 0x137b1059 in /usr/bin/clickhouse
12. DB::IDisk::checkAccessImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) @ 0x13791778 in /usr/bin/clickhouse
13. DB::IDisk::checkAccess() @ 0x137914c3 in /usr/bin/clickhouse
14. DB::IDisk::startup(std::__1::shared_ptr<DB::Context const>, bool) @ 0x13791051 in /usr/bin/clickhouse
15. ? @ 0x137f393d in /usr/bin/clickhouse
16. DB::DiskFactory::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::shared_ptr<DB::IDisk>>>> const&) const @ 0x13794484 in /usr/bin/clickhouse
17. DB::DiskSelector::initialize(Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>) @ 0x139645ed in /usr/bin/clickhouse
18. DB::Context::getDiskSelector(std::__1::lock_guard<std::__1::mutex>&) const @ 0x139301d6 in /usr/bin/clickhouse
19. DB::Context::getStoragePolicySelector(std::__1::lock_guard<std::__1::mutex>&) const @ 0x1390a5b3 in /usr/bin/clickhouse
20. DB::Context::getStoragePolicy(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const @ 0x139304a0 in /usr/bin/clickhouse
21. DB::MergeTreeData::MergeTreeData(DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::StorageInMemoryMetadata const&, std::__1::shared_ptr<DB::Context>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::MergeTreeData::MergingParams const&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings>>, bool, bool, std::__1::function<void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>) @ 0x14df1e6c in /usr/bin/clickhouse
22. DB::StorageMergeTree::StorageMergeTree(DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::StorageInMemoryMetadata const&, bool, std::__1::shared_ptr<DB::Context>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::MergeTreeData::MergingParams const&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings>>, bool) @ 0x151c752e in /usr/bin/clickhouse
23. ? @ 0x151bda44 in /usr/bin/clickhouse
24. DB::StorageFactory::get(DB::ASTCreateQuery const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context>, std::__1::shared_ptr<DB::Context>, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, bool) const @ 0x1497772a in /usr/bin/clickhouse
25. DB::InterpreterCreateQuery::doCreateTable(DB::ASTCreateQuery&, DB::InterpreterCreateQuery::TableProperties const&, std::__1::unique_ptr<DB::DDLGuard, std::__1::default_delete<DB::DDLGuard>>&) @ 0x13e3a9a7 in /usr/bin/clickhouse
26. DB::InterpreterCreateQuery::createTable(DB::ASTCreateQuery&) @ 0x13e35187 in /usr/bin/clickhouse
27. DB::InterpreterCreateQuery::execute() @ 0x13e3eb0d in /usr/bin/clickhouse
28. DB::SystemLog<DB::MetricLogElement>::prepareTable() @ 0x144ea951 in /usr/bin/clickhouse
29. DB::SystemLog<DB::MetricLogElement>::flushImpl(std::__1::vector<DB::MetricLogElement, std::__1::allocator<DB::MetricLogElement>> const&, unsigned long) @ 0x144eca2d in /usr/bin/clickhouse
30. DB::SystemLog<DB::MetricLogElement>::savingThreadFunction() @ 0x144eb3d2 in /usr/bin/clickhouse
31. ? @ 0xe840a2f in /usr/bin/clickhouse
 (version 22.12.1.1752 (official build))
2022.12.21 16:31:29.922201 [ 1 ] {} <Error> Application: Code: 107. DB::ErrnoException: Cannot open file /var/lib/clickhouse/disks/minio/clickhouse_access_check_b3e4e218-0bef-4420-9c95-dd53fa73d21a, errno: 2, strerror: No such file or directory: While checking access for disk minio. (FILE_DOESNT_EXIST), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked const&, int, bool) @ 0xe74c47a in /usr/bin/clickhouse
1. ? @ 0xe74d253 in /usr/bin/clickhouse
2. DB::throwFromErrnoWithPath(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, int, int) @ 0xe74d591 in /usr/bin/clickhouse
3. DB::OpenedFile::open() const @ 0x1304e4d4 in /usr/bin/clickhouse
4. DB::OpenedFile::getFD() const @ 0x1304e574 in /usr/bin/clickhouse
5. ? @ 0x1304c1fe in /usr/bin/clickhouse
6. DB::createReadBufferFromFileBase(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::ReadSettings const&, std::__1::optional<unsigned long>, std::__1::optional<unsigned long>, int, char*, unsigned long) @ 0x1304bcfb in /usr/bin/clickhouse
7. DB::DiskLocal::readFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::ReadSettings const&, std::__1::optional<unsigned long>, std::__1::optional<unsigned long>) const @ 0x13799412 in /usr/bin/clickhouse
8. DB::MetadataStorageFromDisk::readFileToString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const @ 0x138131ef in /usr/bin/clickhouse
9. DB::MetadataStorageFromDisk::readMetadataUnlocked(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_lock<std::__1::shared_mutex>&) const @ 0x1381337c in /usr/bin/clickhouse
10. DB::MetadataStorageFromDisk::getStorageObjects(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const @ 0x13813c7d in /usr/bin/clickhouse
11. DB::DiskObjectStorage::readFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DB::ReadSettings const&, std::__1::optional<unsigned long>, std::__1::optional<unsigned long>) const @ 0x137b1059 in /usr/bin/clickhouse
12. DB::IDisk::checkAccessImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) @ 0x13791778 in /usr/bin/clickhouse
13. DB::IDisk::checkAccess() @ 0x137914c3 in /usr/bin/clickhouse
14. DB::IDisk::startup(std::__1::shared_ptr<DB::Context const>, bool) @ 0x13791051 in /usr/bin/clickhouse
15. ? @ 0x137f393d in /usr/bin/clickhouse
16. DB::DiskFactory::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::shared_ptr<DB::IDisk>>>> const&) const @ 0x13794484 in /usr/bin/clickhouse
17. DB::DiskSelector::initialize(Poco::Util::AbstractConfiguration const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context const>) @ 0x139645ed in /usr/bin/clickhouse
18. DB::Context::getDiskSelector(std::__1::lock_guard<std::__1::mutex>&) const @ 0x139301d6 in /usr/bin/clickhouse
19. DB::Context::getDisksMap() const @ 0x13930640 in /usr/bin/clickhouse
20. DB::ServerAsynchronousMetrics::updateImpl(std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DB::AsynchronousMetricValue, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, DB::AsynchronousMetricValue>>>&, std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000l>>>, std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000l>>>) @ 0x14493e26 in /usr/bin/clickhouse
21. DB::AsynchronousMetrics::update(std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000l>>>) @ 0xe85a0ad in /usr/bin/clickhouse
22. DB::AsynchronousMetrics::start() @ 0xe84b941 in /usr/bin/clickhouse
23. DB::Server::main(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) @ 0xe7dde20 in /usr/bin/clickhouse
24. Poco::Util::Application::run() @ 0x182265e2 in /usr/bin/clickhouse
25. DB::Server::run() @ 0xe7ca3bc in /usr/bin/clickhouse
26. Poco::Util::ServerApplication::run(int, char**) @ 0x1823a93a in /usr/bin/clickhouse
27. mainEntryClickHouseServer(int, char**) @ 0xe7c6e29 in /usr/bin/clickhouse
28. main @ 0x7eae9d3 in /usr/bin/clickhouse
29. __libc_start_main @ 0x7f0ef38e2083 in ?
30. _start @ 0x7bae76e in /usr/bin/clickhouse
 (version 22.12.1.1752 (official build))
2022.12.21 16:31:29.927628 [ 1 ] {} <Error> Application: DB::ErrnoException: Cannot open file /var/lib/clickhouse/disks/minio/clickhouse_access_check_b3e4e218-0bef-4420-9c95-dd53fa73d21a, errno: 2, strerror: No such file or directory: While checking access for disk minio
2022.12.21 16:32:51.702800 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2022.12.21 16:32:51.917498 [ 1 ] {} <Warning> Access(local directory): File /var/lib/clickhouse/access/users.list doesn't exist
2022.12.21 16:32:51.918123 [ 1 ] {} <Warning> Access(local directory): Recovering lists in directory /var/lib/clickhouse/access/
2022.12.21 16:32:52.063701 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:32:52.064332 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:32:52.064954 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:32:52.065590 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:32:52.172692 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:39:32.364249 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2022.12.21 16:39:32.619530 [ 1 ] {} <Warning> Access(local directory): File /var/lib/clickhouse/access/users.list doesn't exist
2022.12.21 16:39:32.619915 [ 1 ] {} <Warning> Access(local directory): Recovering lists in directory /var/lib/clickhouse/access/
2022.12.21 16:39:32.757069 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:39:32.757563 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:39:32.758087 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:39:32.758611 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:39:32.862178 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:40:18.829664 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2022.12.21 16:40:19.072593 [ 1 ] {} <Warning> Access(local directory): File /var/lib/clickhouse/access/users.list doesn't exist
2022.12.21 16:40:19.073079 [ 1 ] {} <Warning> Access(local directory): Recovering lists in directory /var/lib/clickhouse/access/
2022.12.21 16:40:19.212037 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:40:19.212602 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:40:19.213418 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:40:19.214146 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:40:19.297393 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:41:27.024203 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2022.12.21 16:41:27.198221 [ 1 ] {} <Warning> Access(local directory): File /var/lib/clickhouse/access/users.list doesn't exist
2022.12.21 16:41:27.198716 [ 1 ] {} <Warning> Access(local directory): Recovering lists in directory /var/lib/clickhouse/access/
2022.12.21 16:41:27.306897 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:41:27.307533 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:41:27.308097 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:41:27.308406 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:41:27.356398 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:45:57.507619 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2022.12.21 16:45:57.784528 [ 1 ] {} <Warning> Access(local directory): File /var/lib/clickhouse/access/users.list doesn't exist
2022.12.21 16:45:57.784961 [ 1 ] {} <Warning> Access(local directory): Recovering lists in directory /var/lib/clickhouse/access/
2022.12.21 16:45:57.896618 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:45:57.897149 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:45:57.897766 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:45:57.903412 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:45:58.019612 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:48:35.924551 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2022.12.21 16:48:36.181706 [ 1 ] {} <Warning> Access(local directory): File /var/lib/clickhouse/access/users.list doesn't exist
2022.12.21 16:48:36.182068 [ 1 ] {} <Warning> Access(local directory): Recovering lists in directory /var/lib/clickhouse/access/
2022.12.21 16:48:36.319524 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:48:36.320182 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:48:36.320756 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:48:36.321370 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:48:36.375364 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:56:18.553814 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2022.12.21 16:56:18.742828 [ 1 ] {} <Warning> Access(local directory): File /var/lib/clickhouse/access/users.list doesn't exist
2022.12.21 16:56:18.743044 [ 1 ] {} <Warning> Access(local directory): Recovering lists in directory /var/lib/clickhouse/access/
2022.12.21 16:56:18.858233 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:56:18.858545 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:56:18.858872 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:56:18.859193 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:56:18.907917 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:58:02.132606 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2022.12.21 16:58:02.330692 [ 1 ] {} <Warning> Access(local directory): File /var/lib/clickhouse/access/users.list doesn't exist
2022.12.21 16:58:02.330998 [ 1 ] {} <Warning> Access(local directory): Recovering lists in directory /var/lib/clickhouse/access/
2022.12.21 16:58:02.460962 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:58:02.461401 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:58:02.461736 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:58:02.462047 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:58:02.517350 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 16:59:59.775594 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2022.12.21 17:00:00.064529 [ 1 ] {} <Warning> Access(local directory): File /var/lib/clickhouse/access/users.list doesn't exist
2022.12.21 17:00:00.065063 [ 1 ] {} <Warning> Access(local directory): Recovering lists in directory /var/lib/clickhouse/access/
2022.12.21 17:00:00.236450 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:00:00.236879 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:00:00.237456 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:00:00.237983 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:00:00.479256 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:03:47.726900 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2022.12.21 17:03:48.380505 [ 1 ] {} <Warning> Access(local directory): File /var/lib/clickhouse/access/users.list doesn't exist
2022.12.21 17:03:48.381345 [ 1 ] {} <Warning> Access(local directory): Recovering lists in directory /var/lib/clickhouse/access/
2022.12.21 17:03:48.587884 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:03:48.588670 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:03:48.589311 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:03:48.590006 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:03:48.854819 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:05:57.619775 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2022.12.21 17:05:58.044094 [ 1 ] {} <Warning> Access(local directory): File /var/lib/clickhouse/access/users.list doesn't exist
2022.12.21 17:05:58.044553 [ 1 ] {} <Warning> Access(local directory): Recovering lists in directory /var/lib/clickhouse/access/
2022.12.21 17:05:58.219316 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:05:58.220165 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:05:58.221130 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:05:58.221937 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:05:58.640917 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:11:05.261425 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2022.12.21 17:11:05.459999 [ 1 ] {} <Warning> Access(local directory): File /var/lib/clickhouse/access/users.list doesn't exist
2022.12.21 17:11:05.460255 [ 1 ] {} <Warning> Access(local directory): Recovering lists in directory /var/lib/clickhouse/access/
2022.12.21 17:11:05.599819 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:11:05.600353 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:11:05.600922 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:11:05.601406 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:11:05.885809 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:13:28.677474 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2022.12.21 17:13:28.900192 [ 1 ] {} <Warning> Access(local directory): File /var/lib/clickhouse/access/users.list doesn't exist
2022.12.21 17:13:28.900481 [ 1 ] {} <Warning> Access(local directory): Recovering lists in directory /var/lib/clickhouse/access/
2022.12.21 17:13:29.005566 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:13:29.005894 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:13:29.006501 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:13:29.006814 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:13:29.072223 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:15:16.270699 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2022.12.21 17:15:16.527384 [ 1 ] {} <Warning> Access(local directory): File /var/lib/clickhouse/access/users.list doesn't exist
2022.12.21 17:15:16.527780 [ 1 ] {} <Warning> Access(local directory): Recovering lists in directory /var/lib/clickhouse/access/
2022.12.21 17:15:16.650272 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:15:16.650848 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:15:16.651398 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:15:16.652029 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:15:16.864184 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:17:06.442357 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2022.12.21 17:17:06.679063 [ 1 ] {} <Warning> Access(local directory): File /var/lib/clickhouse/access/users.list doesn't exist
2022.12.21 17:17:06.679318 [ 1 ] {} <Warning> Access(local directory): Recovering lists in directory /var/lib/clickhouse/access/
2022.12.21 17:17:06.808268 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:17:06.808741 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:17:06.809197 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:17:06.809686 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:17:06.950750 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:25:54.759926 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2022.12.21 17:25:54.955627 [ 1 ] {} <Warning> Access(local directory): File /var/lib/clickhouse/access/users.list doesn't exist
2022.12.21 17:25:54.955852 [ 1 ] {} <Warning> Access(local directory): Recovering lists in directory /var/lib/clickhouse/access/
2022.12.21 17:25:55.068650 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:25:55.068921 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:25:55.069162 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:25:55.069408 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:25:55.250024 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:27:46.721845 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2022.12.21 17:27:46.996149 [ 1 ] {} <Warning> Access(local directory): File /var/lib/clickhouse/access/users.list doesn't exist
2022.12.21 17:27:46.996539 [ 1 ] {} <Warning> Access(local directory): Recovering lists in directory /var/lib/clickhouse/access/
2022.12.21 17:27:47.156949 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:27:47.157407 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:27:47.157905 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:27:47.158360 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:27:47.254206 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:43:43.987805 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2022.12.21 17:43:44.158751 [ 1 ] {} <Warning> Access(local directory): File /var/lib/clickhouse/access/users.list doesn't exist
2022.12.21 17:43:44.159269 [ 1 ] {} <Warning> Access(local directory): Recovering lists in directory /var/lib/clickhouse/access/
2022.12.21 17:43:44.265685 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:43:44.266081 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:43:44.266410 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:43:44.266670 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2022.12.21 17:43:44.315089 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 22.12.1.1752 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
